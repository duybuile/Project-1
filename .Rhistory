getwd()
x<-1
print(x)
msg<-"hello"
x<-##incomplete
2
x
x<-1:20
x
x<-c(0.5,0.6)
x<-c(t,f)
x<-c(T,F)
x<-vector("numeric",length=10)
y<-c(1.7, "a")
y<-c(TRUE, 2)
y<-c("a", TRUE)
y<-c(TRUE,"a")
x<-0:6
class(x)
as.numeric(x)
as.logical(x)
as.character(x)
x<-c("a","b","c")
as.complex(x)
m<-matrix(nrow=2,ncol=3)
View(m)
View(m)
dim(m)
attributes(m)
m<-matrix(1:6,nrow=2,ncol=3)
x<-1:3
y<-10:12
cbind(x,y)
rbind(x,y)
x<-list(1,"a",TRUE, 1+4i)
x<-factor(c.("yes", "yes", "no", "yes", "no"))
x<-factor(c("yes", "yes", "no", "yes", "no"))
table(x)
unclass(x)
x<-factor(c("yes", "yes", "no", "yes", "no"),levels=c("yes", "no"))
x
unclass(x)
is.na(x)
is.nan(x)
x<-c(1,2,NAN, NA, "a")
x<-data.frame(foo=1:4, bar=c(T,T,F,F))
nrow(x)
x<-1:3
names(x)
names(x)<-c("foo","bar","norf")
names(x)
x<-list(a=1,b=2,c=3)
m<-matrix(1:4, nrow=2, ncol=2)
dimnames(m)<-list(c("a","b"), c("c","d"))
View(m)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
mean(x)
mean(y)
beta1=cor(y,x)*sd(y)/sd(x)
beta0=mean(y) - beta1*mean(x)
data(mtcars)
beta1=cor(mtcars$mpg, mtcars$wt) * sd(mtcars$mpg)/sd(mtcars$wt)
beta1=0.5*2
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
(x[1]-mean(x))/sd(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
beta1=cor(y,x)*sd(y)/sd(x)
beta0=mean(y)-beta1*mean(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
beta1<-cor(y,x)*sd(y)/sd(x)
beta0<-mean(y)-beta1*mean(x)
ssx<-sum((x-mean(x))^2)
n<-length(y)
e<- y - beta0 - beta1*x
sigma <- sqrt(sum(e^2)/(n-2))
seBeta0<-(1/n+mean(x)^2/ssx)^.5*sigma
seBeta1<-sigma/sqrt(ssx)
tBeta0<-beta0/seBeta0
tBeta1<-beta1/seBeta1
pBeta0<-2*pt(abs(tBeta0),df=n-2,lower.tail=FALSE)
pBeta1<-2*pt(abs(tBeta1),df=n-2,lower.tail=FALSE)
sum(e^2)
sqrt(sum(e^2))
fit <- lm(y~x)
res <- resid(fit)
sd(res)
sd(res)/n
sd(res)/(n-2)
sd(y-beta0-beta1*x)
summary(fit$residuals)
x<-mtcars$wt
y<-mtcars$mpg
fit <- lm(y~x)
R.version.string
install.packages("swirl")
install.packages("swirl")
libary("swirl")
install.packages("swirl")
swirl()
install.packages("swirl")
libary("swirl")
libary("swirl")
libary("swirl")
library("swirl")
swirl()
5
12
5+7
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
h(3,null,3L)
h(3,NULL,3L)
mtcars
?mtcars
x <- mtcars$wt
y <- mtcars$mpg
newdata <- data.frame(mtcars$wt = 3000)
newdata <- data.frame(mtcars$wt = "3000")
newdata <- data.frame(wt = "3000")
newdata <- data.frame(wt = 3000)
fit <- lm(y~x)
predict(fit, newdata, prediction.interval=("confidence"))
confidence
predict(fit, newdata, interval=("confidence"))
predict(fit, newdata, interval=("prediction"))
predict(fit, newdata, interval=("prediction"))
newdata <- data.frame(wt = 3)
predict(fit, newdata, interval=("prediction"))
newdata <- data.frame(wt = 3.000)
predict(fit, newdata, interval=("prediction"))
swirl()
library(swirl)
swirl()
swirl()
x <- 5+7
x
y <- x-3
y
c (1.1, 9, 3.14)
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555)
c(z, 555, z)
z*2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1, 2, 3, 4) + c(0, 10, 100)
z*2 + 1000
my_div
1:20
pi:10
15:1
`:`
?`:`
seq(1,20)
seq(0, 10, by=0.5)
my_seq <- seq(5, 10, length=30)
length(m_seq)
length(my_seq)
1:length(my_seq)
seq(along = my_seq)
seq_along(my_seq)
rep(0, times=40)
rep( c(0,1,2), times=10)
rep(c(0, 1, 2), each = 10)
num_vect <- c (0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c ("My", "name", "is")
my_char
paste(my_char, collapse=" ")
c(my_char, "Duy")
my_name <- c(my_char, "Duy")
my_name
paste(my_char, collapse=" ")
paste(my_name, collapse=" ")
paste("Hello", "world!", sep = " ")
paste(c("X", "Y", "Z"), sep = "")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample( c(y, z), 100)
is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf/Inf
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c (foo=11, bar=2, norf=NA)
vect
names(vect)
vect2 <- c (11, 2, NA)
names(vect2) <- c ("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
my_matrix2 <- matrix(data=1:20, nrow=4, ncol=5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly")
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
dim(my_data) <- cnames
colnames(my_data, cnames)
?colnames
colnames(my_data) <- cnames
my_data
0
swirl()
swirl()
quit()
set.seed(1)
rpois(5, 2)
x <- matrix(c(1,2,3,2,5,2,6,-3,1),3,3)
View(x)
x <- matrix (c(1,2,6,2,5,-3,3,2,1),3,3)
View(x)
rank(x)
rankMatrix(x)
rankMatrix(x)
library(Matrix)
rankMatrix(x)
a <- matrix(c(1,2,3,4),2,2)
b <- matrix(c(1,3,2,4),2,2)
a*b
eigen(x)
u <- matrix(c(.8,-.6, .6,.8),2,2)
total <- matrix(c(5,0,0,25),2,2)
v <- matrix(c(1,0,.6,.8),2,2)
t(v)
u*total*t(v)
x <- c(1,0)
y <- c(-1,1)
prod(x,y)
x <- c(cos(a), sin(a))
x <- c(cos(2), sin(2))
y <- c(-sin(2), cos(2))
prod(x,y)
x <- c(.6,.8)
y <- c(.4, -.3)
prod(x,y)
x%*%y
x <- c(cos(a), sin(a))
x <- c(cos(2), sin(2))
y <- c(-sin(2), cos(2))
x%*%y
x <- c(1,0)
> y <- c(-1,1)
x <- c(1,0)
y <- c(-1,1)
x%*%y
prod(x,y)
x <- c(1,2,4)
y <- c(1,3,2)
beta1<-cor(y,x)*sd(y)/sd(x)
beta0<-mean(y)-beta1*mean(x)
fit(x,y)
lm(y~x)
library(caret)
mydata <- read.csv("landedVwr_rb01.csv")
mydata$rOutC <-factor(mydata$rOutC,levels=c(0,1),labels=c("L","W"))
set.seed(98)
inTrain <- createDataPartition(y = mydata$rOutC, p = .75, list = FALSE)
testing <-mydata[-inTrain,]
training <-mydata[inTrain,]
ctrl <- trainControl(method = "repeatedcv", repeats = 3, verboseIter=FALSE)
glmfit <- train(rOutC ~ ., data = training, method = "glm", family=binomial,trControl=ctrl, preProc = c("center","scale"))
install.packages("e1071")
library(e1071)
glmfit <- train(rOutC ~ ., data = training, method = "glm", family=binomial,trControl=ctrl, preProc = c("center","scale"))
glmClasses <- predict(glmfit, newdata = testing)
confusionMatrix(data = glmClasses, testing$rOutC)
round(exp(cbind(Estimate=coef(glmfit$finalModel), confint(glmfit$finalModel))), 2)
glmfit <- train(rOutC ~ ., data = training, method = "svm", family=binomial,trControl=ctrl, preProc = c("center","scale"))
setwd("C:/Users/Jason/OneDrive/Documents/Exploratory Data Analysis/Assignment/Project-1")
source("plot3.R")
plot3()
install.packages("sqldf")
plot3()
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
with(airquality, {
plot(Wind, Ozone, main = "Ozone and Wind")
plot(Solar.R, Ozone, main = "Ozone and Solar Radiation")
plot(Temp, Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
})
par(mfrow = c(1, 3), mar = c(5, 4, 4, 2), oma = c(0, 0, 2, 0))
with(airquality, {
plot(Wind, Ozone, main = "Ozone and Wind")
plot(Solar.R, Ozone, main = "Ozone and Solar Radiation")
plot(Temp, Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
})
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
with(airquality, {
plot(Wind, Ozone, main = "Ozone and Wind")
plot(Solar.R, Ozone, main = "Ozone and Solar Radiation")
plot(Temp, Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
})
par(mfrow = c(2, 2), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
with(airquality, {
plot(Wind, Ozone, main = "Ozone and Wind")
plot(Solar.R, Ozone, main = "Ozone and Solar Radiation")
plot(Temp, Ozone, main = "Ozone and Temperature")
plot(Temp, Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
})
par(mfrow = c(2, 2), mar = c(5, 4, 4, 2), oma = c(0, 0, 2, 0))
with(airquality, {
plot(Wind, Ozone, main = "Ozone and Wind")
plot(Solar.R, Ozone, main = "Ozone and Solar Radiation")
plot(Temp, Ozone, main = "Ozone and Temperature")
plot(Temp, Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
})
par(mfrow = c(2, 2), mar = c(5, 4, 4, 4), oma = c(0, 0, 2, 0))
with(airquality, {
plot(Wind, Ozone, main = "Ozone and Wind")
plot(Solar.R, Ozone, main = "Ozone and Solar Radiation")
plot(Temp, Ozone, main = "Ozone and Temperature")
plot(Temp, Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
})
par(mfrow = c(2, 2), mar = c(0, 0, 0, 0), oma = c(0, 0, 2, 0))
with(airquality, {
plot(Wind, Ozone, main = "Ozone and Wind")
plot(Solar.R, Ozone, main = "Ozone and Solar Radiation")
plot(Temp, Ozone, main = "Ozone and Temperature")
plot(Temp, Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
})
par(mfrow = c(2, 2), mar = c(5, 4, 4, 2), oma = c(0, 0, 2, 0))
with(airquality, {
plot(Wind, Ozone, main = "Ozone and Wind")
plot(Solar.R, Ozone, main = "Ozone and Solar Radiation")
plot(Temp, Ozone, main = "Ozone and Temperature")
plot(Temp, Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
})
source("plot4.R")
plot4()
source("plot4.R")
plot4()
plot4()
